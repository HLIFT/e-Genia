/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package principal;



import com.formdev.flatlaf.FlatLightLaf;
import com.mysql.jdbc.exceptions.jdbc4.CommunicationsException;
import java.awt.event.KeyEvent;
import java.io.UnsupportedEncodingException;
import java.net.URL;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.UIManager;


/**
 *
 * @author etien
 */
public class ConnexionApp extends javax.swing.JFrame{
    
    private static Connection conn = Bdd.coBdd();
    
    private static String[][] identifiant = new String[20][2]; 
    private int idChoisi;
    private String mdpSaisi;
    private String mdpBase;
    /**
     * Creates new form ConnexionApp
     */
    public ConnexionApp() {
        initComponents();
        URL iconURL = getClass().getResource(Données.getUrl_Logo());
        ImageIcon icon = new ImageIcon(iconURL);
        this.setIconImage(icon.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        SaisiMDP = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ListeIdentifant = new javax.swing.JComboBox<>();
        LogoCO = new javax.swing.JLabel();
        BoutonValider = new javax.swing.JButton();
        mauvaisMdp = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(Données.getNomLogiciel() + " | Connexion ");
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(255, 255, 255));
        setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        setName("ConnexionApp"); // NOI18N
        setResizable(false);
        setSize(new java.awt.Dimension(500, 530));

        jPanel1.setBackground(new java.awt.Color(247, 247, 247));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel2.setBackground(new java.awt.Color(Données.getCouleurPrincipale1(), Données.getCouleurPrincipale2(), Données.getCouleurPrincipale3()));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText(Données.getNomLogiciel() + " | Connexion ");
        jLabel1.setToolTipText("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                .addContainerGap())
        );

        SaisiMDP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SaisiMDPKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel2.setText("Identifant :");

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel3.setText("Mot de passe : ");

        ListeIdentifant.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        ListeIdentifant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListeIdentifantActionPerformed(evt);
            }
        });

        LogoCO.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/LogoUser.png"))); // NOI18N

        BoutonValider.setBackground(new java.awt.Color(0, 255, 0));
        BoutonValider.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BoutonValider.setText("VALIDER");
        BoutonValider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoutonValiderActionPerformed(evt);
            }
        });

        mauvaisMdp.setForeground(new java.awt.Color(255, 0, 0));
        mauvaisMdp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mauvaisMdp.setText("Le mot de passe est erroné, veuillez réessayer");
        mauvaisMdp.setVisible(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(LogoCO)
                .addGap(79, 79, 79)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BoutonValider, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(SaisiMDP, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                    .addComponent(ListeIdentifant, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mauvaisMdp)
                .addGap(36, 36, 36))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(mauvaisMdp)
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ListeIdentifant, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SaisiMDP, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(LogoCO, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(BoutonValider, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );

        int i =0;
        while (identifiant[i][1] != null &&i < identifiant.length){
            ListeIdentifant.addItem(identifiant[i][0]);
            i++;
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void ListeIdentifantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListeIdentifantActionPerformed
        idChoisi =  ListeIdentifant.getSelectedIndex();
        //System.out.println(idChoisi);
    }//GEN-LAST:event_ListeIdentifantActionPerformed

    private void SaisiMDPKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SaisiMDPKeyPressed
            if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            mdpSaisi = SaisiMDP.getText();
            verifAut();
        }
    }//GEN-LAST:event_SaisiMDPKeyPressed

    private void BoutonValiderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoutonValiderActionPerformed
        mdpSaisi = SaisiMDP.getText();
        verifAut();
    }//GEN-LAST:event_BoutonValiderActionPerformed


    
    public static void main(String args[]){
        recupIdApp();
        
        try {
            UIManager.setLookAndFeel( new FlatLightLaf() );
        } catch( Exception ex ) {
            System.err.println( "Failed to initialize LaF" );
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ConnexionApp().setVisible(true);
        });
        
        
    }
    
    public static void recupIdApp(){
        try {
            Statement state = conn.createStatement();
            ResultSet result = state.executeQuery("SELECT iduser_app, UA_Identifiant FROM UserApp WHERE UA_Statut = 1");
            
            int i = 0;
            while(result.next()){
                identifiant[i][0] = result.getString("UA_Identifiant");
                identifiant[i][1] = result.getString("iduser_app");
                i++;
            }
            result.close();
            state.close();
        } catch (CommunicationsException e) {
            Bdd.lostCO(e);
        } catch (SQLException ex) {
            Logger.getLogger(ConnexionApp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void verifAut(){
        try {
            PreparedStatement recupMdp = conn.prepareStatement("SELECT UA_MotDePasse FROM UserApp WHERE iduser_app = ?");
            recupMdp.setString(1, identifiant[idChoisi][1]);
            
            ResultSet result = recupMdp.executeQuery();
            
            while(result.next()){
                mdpBase = result.getString("UA_MotDePasse");
            }
            String mdpSaisiHash = hashage.Hash.hashPass(mdpSaisi);
            if(mdpSaisiHash.equals(mdpBase)){
                recupDroitUser();
                InterfaceUser.main(null);
                this.dispose();
                
            } else {
                //dire que cest un mauvais mdp
                mauvaisMdp.setVisible(true);
            }
            result.close();
            recupMdp.close();
        } catch (CommunicationsException e) {
            Bdd.lostCO(e);
        } catch (SQLException | NoSuchAlgorithmException | UnsupportedEncodingException ex) {
            Logger.getLogger(ConnexionApp.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }
     
    public void recupDroitUser(){
        try {
            PreparedStatement RecupDU = conn.prepareStatement("SELECT * FROM UserApp, DroitUA WHERE DroitUA_idDroitUA = idDroitUA and iduser_app = ?");
            
            RecupDU.setString(1, identifiant[idChoisi][1]);
            ResultSet result = RecupDU.executeQuery();
            
            while(result.next()){
                Données.setUA_Identifiant(result.getString("UA_Identifiant"));
                Données.setDUA_Type(result.getString("DUA_Type"));
                
                Données.setDUA_AchatVente(result.getInt("DUA_AchatVente"));
                Données.setDUA_Admin(result.getInt("DUA_Admin"));
                Données.setDUA_Encaissement(result.getInt("DUA_Encaissement"));
                Données.setDUA_FichierArticle(result.getInt("DUA_FichierArticle"));
                Données.setDUA_FichierClient(result.getInt("DUA_FichierClient"));
                Données.setDUA_Id(result.getInt("iduser_app"));
            }
            
            result.close();
            RecupDU.close();
        } catch (CommunicationsException e) {
            Bdd.lostCO(e);
        } catch (SQLException ex) {
            Logger.getLogger(ConnexionApp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BoutonValider;
    private javax.swing.JComboBox<String> ListeIdentifant;
    private javax.swing.JLabel LogoCO;
    private javax.swing.JPasswordField SaisiMDP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel mauvaisMdp;
    // End of variables declaration//GEN-END:variables

}
