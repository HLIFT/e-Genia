/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package principal;

import com.formdev.flatlaf.FlatLightLaf;
import com.mysql.jdbc.exceptions.jdbc4.CommunicationsException;
import com.qoppa.pdfWriter.PDFDocument;
import com.qoppa.pdfWriter.PDFPage;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Paper;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author neoag
 */
public class HistoriqueES extends javax.swing.JFrame {
    private static Connection conn = Bdd.coBdd();
    private static int nb_lignes;
    

    
    private static int NbColonnesES = 5;
    private static Object[][] ES = new Object[countES()][NbColonnesES];
    private static Object[][] LigneES = new Object[countLigneES()][NbColonnesES];

    private static String [] nomsColonnesES = {"ID ES", "Date", "Heure", "Fournisseur", "Motif"};
    private static String [] nomsColonnesLigneES = {"Numéro de ligne","Quantité transaction","Numéro ES","Type ES","Désignation Article"};
    private static int lignes_tab = 0;
    
    private static int ES_idLigneES;
    private static int ES_Quantité;
    private static int ES_idES;
    private static String ES_TypeES;
    private static String ES_Désignation;

    
    /**
     * Creates new form Entrée_Sortie
     */
    public HistoriqueES() {
        if(ES[0][0]!=null){
            for (int i=0; i < ES.length; i++){
                for (int j = 0; j < NbColonnesES; j++) {
                    ES[i][j] = null;
                    
                }
            }
            lignes_tab=0; 
        }
        
        ES = new Object[countES()][NbColonnesES];
        recupES();
        initComponents();
        
        URL iconURL = getClass().getResource(Données.getUrl_Logo());
        ImageIcon icon = new ImageIcon(iconURL);
        this.setIconImage(icon.getImage());

        
        setExtendedState(JFrame.MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        NomLogiciel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        jDialog1.setResizable(false);
        jDialog1.setSize(new java.awt.Dimension(1064, 564));

        jTable2.setAutoCreateRowSorter(true);
        jTable2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTable2.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            LigneES,
            nomsColonnesLigneES) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }

        });
        jTable2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable2.setGridColor(new java.awt.Color(51, 153, 255));
        jTable2.setIntercellSpacing(new java.awt.Dimension(0, 0));
        jTable2.setPreferredSize(new java.awt.Dimension(1703, 2120));
        jTable2.setRowHeight(30);
        jTable2.setSelectionBackground(new java.awt.Color(130, 244, 15));
        jTable2.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jTable2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(jTable2);

        jButton2.setText("QUITTER");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("GENERER PDF");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialog1Layout.createSequentialGroup()
                        .addGap(338, 338, 338)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(137, 137, 137)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDialog1Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 978, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(Données.getNomLogiciel() + " | Historique Entrées/Sorties ");
        setSize(new java.awt.Dimension(1920, 1080));

        jPanel3.setBackground(new java.awt.Color(Données.getCouleurPrincipale1(), Données.getCouleurPrincipale2(), Données.getCouleurPrincipale3()));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        NomLogiciel.setFont(new java.awt.Font("Tahoma", 2, 36)); // NOI18N
        NomLogiciel.setForeground(new java.awt.Color(255, 255, 255));
        NomLogiciel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NomLogiciel.setText(Données.getNomLogiciel());
        jPanel3.add(NomLogiciel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 13, 1910, -1));

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            ES,
            nomsColonnesES) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }

        });
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.setGridColor(new java.awt.Color(51, 153, 255));
        jTable1.setIntercellSpacing(new java.awt.Dimension(0, 0));
        jTable1.setRowHeight(30);
        jTable1.setSelectionBackground(new java.awt.Color(130, 244, 15));
        jTable1.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("DÉTAILS");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1920, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1555, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(116, 116, 116)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 236, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 643, Short.MAX_VALUE)
                        .addGap(144, 144, 144))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(232, 232, 232))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        for (int i=0; i < LigneES.length; i++){
            for (int j = 0; j < NbColonnesES; j++) {
                LigneES[i][j] = null;
                jTable2.setValueAt(null, i, j);
            }
        }
        lignes_tab=0;
        recupLignesES((int) jTable1.getValueAt(jTable1.getSelectedRow(),0));
        jDialog1.setVisible(true);
        jDialog1.setLocationRelativeTo(null);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jDialog1.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jTable2.repaint();
        jTable2.revalidate();
        
        // On crée le panel qui sera mis dans la page pdf en y ajoutant des composants Swing
        JPanel page = new JPanel(new FlowLayout());
        page.setSize(1703, 2420);
        page.setVisible(true);
        page.setBackground(new java.awt.Color(255, 255, 255));

        JLabel label = new JLabel("Récapitulatif d'ES", SwingConstants.CENTER);
        label.setFont (label.getFont ().deriveFont (36.0f));
        label.setVisible(true);
        label.setSize(1703, 50);
        label.setLocation(15, 47);
        
        JLabel label2 = new JLabel("Fournisseur : "+jTable1.getValueAt(jTable1.getSelectedRow(), 3), SwingConstants.LEFT);
        label2.setFont (label.getFont ().deriveFont (36.0f));
        label2.setVisible(true);
        label2.setSize(1703, 50);
        label2.setLocation(15,210);
        
        JLabel label3 = new JLabel("Date : "+jTable1.getValueAt(jTable1.getSelectedRow(), 1)+" "+jTable1.getValueAt(jTable1.getSelectedRow(), 2), SwingConstants.CENTER);
        label3.setFont (label.getFont ().deriveFont (36.0f));
        label3.setVisible(true);
        label3.setSize(1703, 50);
        label3.setLocation(15, 210);
        
        JLabel label4 = new JLabel("Motif : "+jTable1.getValueAt(jTable1.getSelectedRow(), 4), SwingConstants.RIGHT);
        label4.setFont (label.getFont ().deriveFont (36.0f));
        label4.setVisible(true);
        label4.setSize(1703, 50);
        label4.setLocation(0, 210);

        JLabel logo = new JLabel();
        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logo_recap.png")));
        logo.setVisible(true);
        logo.setSize(274, 164);
        logo.setLocation(20, 20);
        logo.setFont(logo.getFont().deriveFont(36.0f));
        
        JTableHeader header = jTable2.getTableHeader();
        header.setLocation(50, 260);
        header.setFont(new Font("Arial", Font.BOLD, 24));
        header.setSize(1703,110);

        page.add(logo);
        page.add(label);
        page.add(label3);
        page.add(label4);
        page.add(label2);
        page.add(header);

        jTable2.setLocation(50, 370);
        jTable2.setFont(new Font("Arial", Font.PLAIN, 24));
        jTable2.setSize(1703,2120);
        jTable2.setShowGrid(false);
        jTable2.setShowHorizontalLines(true);
        jTable2.setGridColor(new java.awt.Color(190, 190, 190));

        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        for(int i = 0; i<5; i++) {
            jTable2.getColumnModel().getColumn(i).setCellRenderer( centerRenderer );
            jTable2.getColumnModel().getColumn(i).setWidth(320);
        }
        jTable2.setRowHeight(60);

        page.add(jTable2);

        //On crée la page pdf elle-même
        Paper p = new Paper();
        p.setSize(8.25 * 72, 11.75 * 72);
        p.setImageableArea(0, 0, 8.25 * 72, 11.75 * 72);
        PageFormat pf = new PageFormat();
        pf.setPaper(p);
        PDFDocument pdfDoc = new PDFDocument();
        // Create page
        PDFPage pagePDF = pdfDoc.createPage(pf);

        // Add page to document
        pdfDoc.addPage(pagePDF);
        // get graphics object from the page
        Graphics2D g2d = pagePDF.createGraphics();
        g2d.scale(0.35, 0.35);
        // myComponent being a JComponent showing on the screen
        page.print(g2d);


        File outFile = new File("temp/recap.pdf");

        // save document
        try {
            pdfDoc.saveDocument(outFile.getAbsolutePath());
        } catch (IOException ex) {
            Logger.getLogger(Etiquettes.class.getName()).log(Level.SEVERE, null, ex);
        };
        extend.ouvrirPDF.ouvrirDocPdf("temp/recap.pdf");    

        jDialog1.setVisible(false);
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        if(Données.getDUA_AchatVente()== 1){
            
            try {
                UIManager.setLookAndFeel( new FlatLightLaf() );
            } catch( Exception ex ) {
                System.err.println( "Failed to initialize LaF" );
            }

            /* Create and display the form */
            java.awt.EventQueue.invokeLater(new Runnable() {
                @Override
                public void run() {
                    new HistoriqueES().setVisible(true);
                }
            });
        }else
            ViolationDroit.main(null);
        

    }

    
    private static int countES(){ 
        int i = 0;
        try {
            Statement state = conn.createStatement();
            ResultSet result = state.executeQuery("SELECT COUNT(*) FROM EntrerSortie");
            
            while(result.next()){
                i = result.getInt("COUNT(*)");
            }
            result.close();
            state.close();
        } catch (CommunicationsException e) {
            Bdd.lostCO(e);
        } catch (SQLException ex) {
            Logger.getLogger(ConnexionApp.class.getName()).log(Level.SEVERE, null, ex);
        }
        return i;
    }
        private static void recupES(){
            try {
                Statement state = conn.createStatement();
                ResultSet result = state.executeQuery("SELECT idEntrerSortie, ES_Date, ES_Heure, F_Nom, MES_Motif from EntrerSortie inner join Fournisseur on EntrerSortie.Fournisseur_idFournisseur=Fournisseur.idFournisseur inner join MotifES on EntrerSortie.MotifES_idMotifES=MotifES.idMotifES");

                while(result.next()){
                    
                    ES[lignes_tab][0] = result.getInt("idEntrerSortie");
                    ES[lignes_tab][1] = result.getString("ES_Date");
                    ES[lignes_tab][2] = result.getString("ES_Heure");
                    ES[lignes_tab][3] = result.getString("F_Nom");
                    ES[lignes_tab][4] = result.getString("MES_Motif");

                    lignes_tab++;
                    System.out.println(lignes_tab);
                }
                result.close();
                state.close();
                lignes_tab = 0;
                

            } catch (CommunicationsException e) {
                Bdd.lostCO(e);
            } catch (SQLException ex) {
                Logger.getLogger(ConnexionApp.class.getName()).log(Level.SEVERE, null, ex);
            }
        
    }

    private static void recupLignesES(int idLigneSelectionnée){
        String sql_ligneES = "SELECT LES_Quantité, EntrerSortie_idEntrerSortie, TES_Nom, A_Designation from LigneES inner join EntrerSortie on LigneES.EntrerSortie_idEntrerSortie = EntrerSortie.idEntrerSortie inner join TypeES on LigneES.TypeES_idTypeES = TypeES.idTypeES inner join Article on Article.idArticle = LigneES.Article_idArticle where EntrerSortie.idEntrerSortie = ?";
        try {
            PreparedStatement state = conn.prepareStatement(sql_ligneES);
            state.setInt(1, idLigneSelectionnée);
            ResultSet result = state.executeQuery();
            while(result.next()){
                ES_Quantité = result.getInt("LES_Quantité");
                ES_idES = result.getInt("EntrerSortie_idEntrerSortie");
                ES_TypeES = result.getString("TES_Nom");
                ES_Désignation = result.getString("A_Designation");
                LigneES[lignes_tab][0] = lignes_tab+1;
                LigneES[lignes_tab][1] = ES_Quantité;
                LigneES[lignes_tab][2] = ES_idES;
                LigneES[lignes_tab][3] = ES_TypeES;
                LigneES[lignes_tab][4] = ES_Désignation;
                jTable2.setValueAt(lignes_tab+1,lignes_tab, 0);
                jTable2.setValueAt(LigneES[lignes_tab][1],lignes_tab, 1);
                jTable2.setValueAt(LigneES[lignes_tab][2],lignes_tab, 2);
                jTable2.setValueAt(LigneES[lignes_tab][3],lignes_tab, 3);
                jTable2.setValueAt(LigneES[lignes_tab][4],lignes_tab, 4);
                lignes_tab++;                
            }
            result.close();
            state.close();
            

            
        } catch (CommunicationsException e) {
            Bdd.lostCO(e);
        } catch (SQLException ex) {
            Logger.getLogger(ConnexionApp.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
        private static int countLigneES(){ 
        int i = 0;
        try {
            Statement state = conn.createStatement();
            ResultSet result = state.executeQuery("SELECT COUNT(*) FROM LigneES");
            
            while(result.next()){
                i = result.getInt("COUNT(*)");
            }
            result.close();
            state.close();
        } catch (CommunicationsException e) {
            Bdd.lostCO(e);
        } catch (SQLException ex) {
            Logger.getLogger(ConnexionApp.class.getName()).log(Level.SEVERE, null, ex);
        }
        return i;
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel NomLogiciel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private static javax.swing.JTable jTable1;
    private static javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
